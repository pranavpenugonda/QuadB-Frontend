{"ast":null,"code":"var _jsxFileName = \"/home/workspace/todo-app/src/components/TaskInput/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskInput = ({\n  addTask\n}) => {\n  _s();\n  const [task, setTask] = useState(\"\");\n  const handleInputChange = event => {\n    setTask(event.target.value);\n  };\n  const handleAddTask = () => {\n    if (task.trim() !== \"\") {\n      addTask(task);\n      setTask(\"\");\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      handleAddTask();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-cont\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter task\",\n      value: task,\n      onChange: handleInputChange,\n      onKeyPress: handleKeyPress,\n      className: \"input-element\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      className: \"add-task-btn\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskInput, \"68Y0odjr5YYZ1eMe5aWHrdIJ63Q=\");\n_c = TaskInput;\nexport default TaskInput;\nvar _c;\n$RefreshReg$(_c, \"TaskInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskInput","addTask","_s","task","setTask","handleInputChange","event","target","value","handleAddTask","trim","handleKeyPress","key","className","children","type","placeholder","onChange","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/workspace/todo-app/src/components/TaskInput/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\n\nconst TaskInput = ({ addTask }) => {\n  const [task, setTask] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    setTask(event.target.value);\n  };\n\n  const handleAddTask = () => {\n    if (task.trim() !== \"\") {\n      addTask(task);\n      setTask(\"\");\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      handleAddTask();\n    }\n  };\n\n  return (\n    <div className=\"input-cont\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter task\"\n        value={task}\n        onChange={handleInputChange}\n        onKeyPress={handleKeyPress}\n        className=\"input-element\"\n      />\n      <button onClick={handleAddTask} className=\"add-task-btn\">\n        Add Task\n      </button>\n    </div>\n  );\n};\n\nexport default TaskInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMQ,iBAAiB,GAAIC,KAAK,IAAK;IACnCF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIN,IAAI,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACtBT,OAAO,CAACE,IAAI,CAAC;MACbC,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;EAED,MAAMO,cAAc,GAAIL,KAAK,IAAK;IAChC,IAAIA,KAAK,CAACM,GAAG,KAAK,OAAO,EAAE;MACzBH,aAAa,CAAC,CAAC;IACjB;EACF,CAAC;EAED,oBACEV,OAAA;IAAKc,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBf,OAAA;MACEgB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBR,KAAK,EAAEL,IAAK;MACZc,QAAQ,EAAEZ,iBAAkB;MAC5Ba,UAAU,EAAEP,cAAe;MAC3BE,SAAS,EAAC;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFvB,OAAA;MAAQwB,OAAO,EAAEd,aAAc;MAACI,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAEzD;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACpB,EAAA,CAnCIF,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}